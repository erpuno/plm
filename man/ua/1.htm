<!DOCTYPE html><html><head><meta charset="utf-8" /><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="description" content="" /><meta name="author" content="Namdak Tonpa" /><title>2019-06-30</title><link rel="stylesheet" href="https://n2o.dev/blank.css?v=2" /></head><body><nav>
    <a href="../../index.html">PLM</a>
    <div class="dropdown">
       <a onclick="dropChap()" class="dropbtn">Частина 1</a>
    <div id="dropdownCHAPTER" class="dropdown-content">
       <a href="1.htm" style="background:#ededed;">Частина 1</a>
       <a href="2.htm">Частина 2</a>
       <a href="3.htm">Частина 3</a>
       <a href="4.htm">Частина 4</a>
       <a href="5.htm">Частина 5</a>
       <a href="6.htm">Частина 6</a>
       <a href="7.htm">Частина 7</a>
     </div>
     </div>
    <div class="dropdownLANG">
       <a onclick="dropLang()" class="dropbtn"  >UA</a>
    <div id="dropdownLANG" class="dropdown-content">
       <a href="../ua/1.htm" style="background:#ededed;">UA</a>
       <a href="../bg/1.htm">BG</a>
       <a href="../ru/1.htm">RU</a>
     </div>
     </div>
</nav><header>
</header><main>
    <section>
        <h3>Частина 1. Вступ</h3>

        <h4>Модулі підприємства</h4>

        <p>МІА: Підприємство є комплексом бібліотек&#160;(N2O.DEV) та підсистем
           додатків, модулів підприємства&#160;(ERP.UNO), який використовує загальну
           шину і загальну розподілену базу даних.</p>

   <figure><code>
  <a href="https://n2o.dev">N2O.DEV</a> <a href="https://erp.uno">ERP.UNO</a>   ROOTS
  ------- --------- -----------
  active  acc       n2o.dev
  bert    bank      erp.uno
  bpe     chat      infotech.gov.ua
  form    crm       synrc.com
  fs      db
  kvs     ent
  mach    erp
  mad     fin
  n2o     fix
  nitro   ldap
  pie     mq
  rest    pay
  sh      pm
          review
          rocksdb
          sample
          scm
          sys
          tic
          tms
          wms
          sample
          bench
          plm
          xio
        </code></figure>

        <p><b>LDAP</b> — Сервер аутентифікації, зберігання ключів та директорія підприємства.</p>

        <p><b>ERP</b> — Даний модуль зберігає основну ієрархічну структуру
        підприємства, її схему, записи про персонал, інвентар, компанії
        та офіси підприємства.</p>

        <p><b>FIN</b> — Фінансовий модуль підприємства, зберігає бізнес процеси,
        які представляють собою рахунки учасників системи: персонал (для нарахування зарплат),
        рахунки та субрахунки підприємства (для здійснення економічної діяльності) і
        зовнішні рахунки в платіжних системах.</p>

        <p><b>ACC</b> — Система управління персоналом: зарплатні відомості,
        календар підприємства, відпустки, декретні відпустки, інші календарі.</p>

        <p><b>SCM</b> — Система управління ланцюжком поставок: головний БП системи —
           експедиційний процес доставки товарів ланцюжку одержувачів
           за допомогою транспортних компаній.</p>

        <p><b>CRM</b> — Система управління клієнтами: являє собою розширення більш
           абстрактного додатку CHAT.</p>

        <p><b>PLM</b> — Система управління життєвим циклом проектів і продуктів.
           Також містить CashFlow та P&#38;L звіти.</p>

        <p><b>PM</b> — Система управління проектами підприємства з деталізацією
           часу і протоколів прийому-передачі (прийняті коміти в гитхабі).</p>

        <p><b>WMS</b> — Система управління складом.</p>

        <p><b>TMS</b> — Система управління транспортом підприємства.</p>

        <h4>Модуль PLM</h4>

        <p>В цьому документі описана система управління життєвим

           циклом продуктів і проектів — Product Lifecycle Managenent (PLM).
           На базі PLM модуля ми розробили систему управління
           аутсорсинговим підприємством Quanterall з можливістю
           інвестування та обліком опціонів для програмістів.

        </p><p>Цілі проекту:</p>

        <p>— Підвищення прозорості ведення бізнесу;<br />
           — Видача опціонів з прибутку;<br />
           — Автоматизація підприємства.</p>

        <p>Задачі проекту:</p>

        <p>— Створення панелі управління директора, працівників та інвесторів;<br />
           — Попроектна звітність (СashFlow, P&#38;L);<br />
           — Управління опціонами програмістів;<br />
           — Інвестування в проекти іншими інвесторами (зі страхуванням).</p>

        <p>Бізнес процеси:</p>

        <p>— Бізнес-процес — рахунок учасника проекту (FIN);<br />
           — Головний бізнес-процес модуля — довгоживучий проект-продукт (PLM);<br />
           — Створення проекту із залученням інвестицій під заставу прибутку від інших проектів (Pre-PLM);<br />
           — Щомісячний процес розподілу прибутку (PLM-Calc):
             після вирахування згортки виплачених зарплат зі згортки оплачених рахунків клієнтам
             по CashFlow ми формуємо список статей:
             1) страховий фонд (який відкушується якщо ми використовуємо цей проект
                в якості застави для кредиту на інший проект;
             2) опціони програмістів,
                видаються автоматично людям, які працюють над цим проектом;
                інші люди також можуть брати участь;
             3) наш заробіток (вільний пул або резервація);
             4) R&#38;D відрахування (обов'язкові).</p>

        <h4>Інструкція розробника PLM</h4>

        <p>Інструкція розробника PLM включає покроковий опис процесу створення
           підсистеми PLM з використанням бібліотек SYNRC:
           1) Адміністративна частина: KVS, BPE, FORM;
           2) Модулі конфігурації PLM: PLM, FIN, LDAP.</p>

        <p>Система PLM залежить також від інших модулів підприємства:
           FIN — фінансовий модуль управління персональними рахунками та рахунками підприємства;
           ACC — модуль управління персоналом і контрагентами;
           ERP — модуль інкапсуляції організаційної структури підприємства;
           LDAP — система управління ідентифікаторами та ключами.
           Окрім модулів підприємства тут також розглядаються бібліотеки,
           залежності модуля PLM:
           BPE — система управління бізнес процесами підприємства;
           KVS — система зберігання даних;
           FORM — система генерації форм.  PLM залежить і від інших бібліотек,
           які в цьому документі не розглядаються:
           N2O — система управління з'єднаннями та протоколами;
           NITRO — система генерації HTML5.</p>


    </section>
    <section>
        <h3>Управління ресурсами</h3>

        <p></p>

        <p>Головним чином інформаційна структура нашого підприємства
           складається з обчислювальних ресурсов (додатки, запущені в шині)
           та накопичувальних ресурсів (дані, збережені в базі даних).

        </p><p>SOA архітектура в якості моделі управління обчислювальними
           ресурсами пропонує асинхронний протокол віддаленого виклику на шинах.
           Разом з N2O можно використовувати MQTT та інші шини, за допомогою наступних протоколів: TCP, WebSocket.
           Ці асинхронні протоколи часто називають
           протоколами реального часу, оскільки в них функції відправки повідомлень завжди
           миттєво повертають результат. Що ж стосується протоколів для публікації і доступу
           до даних, то тут може виявитися доречним використання синхронного HTTP протоколу.</p>

        <h4>Обчислювальні ресурси</h4>

        <p>Для SOA архітектури традиційно використовуються асинхронні
           протоколи доступу до обчислювальних ресурсів. Зазвичай це серверні
           воркери, які підключені до шини і обслуговують API певного додатку.
           Кожен додаток має власне консистентне хеш-кільце воркерів. В мережі
           одночасно працює багато кілець-додатків.</p>

   <figure><code>
config :n2o,
  tcp_services: ['ldap'],
  ws_services: ['chat'],
  mqtt_services: ['erp', 'bpe']
   </code></figure>

        <p>За допомогою <b>config.exs</b> файлу можна налаштувати необхідну
           конфігурацію серії консистентних кілець, кожне з яких працює
           на власному транспортному протоколі. В даному прикладі показано
           карту Erlang серверів, які обслуговують черги додатків в шині:</p>

   <figure><code>
> PLM.vnodes
[
  {{:tcp, '/ldap/tcp/4'}, [:n2o_tcp]},
  {{:tcp, '/ldap/tcp/3'}, [:n2o_tcp]},
  {{:tcp, '/ldap/tcp/2'}, [:n2o_tcp]},
  {{:tcp, '/ldap/tcp/1'}, [:n2o_tcp]},
  {{:ws, '/chat/ws/4'}, [:n2o_ws]},
  {{:ws, '/chat/ws/3'}, [:n2o_ws]},
  {{:ws, '/chat/ws/2'}, [:n2o_ws]},
  {{:ws, '/chat/ws/1'}, [:n2o_ws]},
  {{:mqtt, '/erp/mqtt/4'}, [:n2o_mqtt]},
  {{:mqtt, '/erp/mqtt/3'}, [:n2o_mqtt]},
  {{:mqtt, '/erp/mqtt/2'}, [:n2o_mqtt]},
  {{:mqtt, '/erp/mqtt/1'}, [:n2o_mqtt]},
  {{:mqtt, '/bpe/mqtt/4'}, [:n2o_mqtt]},
  {{:mqtt, '/bpe/mqtt/3'}, [:n2o_mqtt]},
  {{:mqtt, '/bpe/mqtt/2'}, [:n2o_mqtt]},
  {{:mqtt, '/bpe/mqtt/1'}, [:n2o_mqtt]},
  {{:caching, 'timer'}, [:n2o]}
]
    </code></figure>

        <p>Завдяки такій деталізації можна проектувати гетерогенні системи,
           включаючи необхідний набір протоколів на портах потрібних машин. Ця же система
           дозволяє отримати балансування навантаження, підключаючи фізичні ресурси
           до певних черг шини даних.</p>

        <p>В нашій моделі асинхронні протоколи використовуються для управління
           обчислювальними ресурсами підприємства.</p>

        <h4>Накопичувальні ресурси</h4>

        <p>Розподілені хеш-кільця використовуються не тільки для розподілених обчислень,
           але і для зберігання даних.
           Деякі бази даних, наприклад RocksDB та Cassandra, використовують глобальний простір
           ключів для даних (на відміну від таблично-орієнтованих баз). Саме для таких
           баз і створено библиотеку KVS, де в якості синхронного транзакційного
           інтерфейсу — API ланцюжків з гарантією консистентності. Нижче
           наведено приклад структури ланцюжків екземпляру системи PLM:</p>

   <figure><code>
> :kvs.all :writer
[
  {:writer, '/bpe/proc', 2},
  {:writer, '/erp/group', 1},
  {:writer, '/erp/partners', 7},
  {:writer, '/acc/synrc/Kyiv', 3},
  {:writer, '/chat/5HT', 1},
  {:writer, '/bpe/hist/1562187187807717000', 8},
  {:writer, '/bpe/hist/1562192587632329000', 1}
]
    </code></figure>

        <p>В нашій моделі синхронні протоколи використовуються для управління
           накопичувальними ресурсами підприємства і транзакційного процесингу.</p>

        <h4>Типові специфікації</h4>

        <p>Протоколи визначаються типовими специфікаціями і генеруються для наступних мов:
           Java, Swift, JavaScript, Google Protobuf V3, ASN.1. Також ми генеруємо валідатори даних по цих
           типових анотаціях і вбудовуємо ці валідатори в тракт наших розподілених протоколів,
           тому ми ніколи не дозволимо клієнтам зіпсувати сторадж. Для веб додатків у нас развинута
           система валідації — як для JavaScript, так і на стороні сервера. Бізнес логіка повністью ізольована в нашій
           системі управління бізнес процесами, де кожен бізнес процесс
           є процесом віртуальної машини. Всі ланцюжки модифікуються атомарним чином,
           підтримують flake адресацію, і не вимагають додаткової ізоляції
           у своєму примітивному використанні.
           Тому ви можете трактувати базу як розподілений кеш
           і використовувати її з фронт додатків для примітивних випадків.</p>


    </section>
</main><footer>Namdak Tonpa <span class="heart">&#160;❤&#160;</span> 2009—2019</footer>
<script type="text/javascript" src="https://n2o.dev/drop.js"></script>
</body>
</html>
